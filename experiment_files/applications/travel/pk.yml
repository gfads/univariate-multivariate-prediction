apiVersion: keda.sh/v1alpha1
kind: TriggerAuthentication
metadata:
  name: keda-trigger-auth-predictkube-secret
  namespace: travel-agency
spec:
  secretTargetRef:
  - parameter: apiKey
    name: predictkube-secrets
    key: apiKey
---
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: cars-v1-scaler
  namespace: travel-agency
spec:
  scaleTargetRef:
    name: cars-v1
  pollingInterval: 15
  cooldownPeriod: 300
  minReplicaCount: 1
  maxReplicaCount: 10
  triggers:
  - type: predictkube
    metadata:
      predictHorizon: "1m"
      historyTimeWindow: "12h"  # We recomend to use minimum 7-14 days time window as historical data
      prometheusAddress: http://prometheus-service.monitoring.svc.cluster.local:9090
      query: sum(rate(container_cpu_usage_seconds_total{id=~".*kubepods.*", pod=~"cars-v1.*", name!~".*POD.*"}[1m]))
      queryStep: "1m" # Note: query step duration for range prometheus queries
      threshold: '0.16' # Value to start scaling for
    authenticationRef:
      name: keda-trigger-auth-predictkube-secret
---
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: discounts-v1-scaler
  namespace: travel-agency
spec:
  scaleTargetRef:
    name: discounts-v1
  pollingInterval: 15
  cooldownPeriod: 300
  minReplicaCount: 1
  maxReplicaCount: 10
  triggers:
  - type: predictkube
    metadata:
      predictHorizon: "1m"
      historyTimeWindow: "12h"  # We recomend to use minimum 7-14 days time window as historical data
      prometheusAddress: http://prometheus-service.monitoring.svc.cluster.local:9090
      query: sum(rate(container_cpu_usage_seconds_total{id=~".*kubepods.*", pod=~"discounts-v1.*", name!~".*POD.*"}[1m]))
      queryStep: "1m" # Note: query step duration for range prometheus queries
      threshold: '0.16' # Value to start scaling for
    authenticationRef:
      name: keda-trigger-auth-predictkube-secret
---
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: flights-v1-scaler
  namespace: travel-agency
spec:
  scaleTargetRef:
    name: flights-v1
  pollingInterval: 15
  cooldownPeriod: 300
  minReplicaCount: 1
  maxReplicaCount: 10
  triggers:
  - type: predictkube
    metadata:
      predictHorizon: "1m"
      historyTimeWindow: "12h"  # We recomend to use minimum 7-14 days time window as historical data
      prometheusAddress: http://prometheus-service.monitoring.svc.cluster.local:9090
      query: sum(rate(container_cpu_usage_seconds_total{id=~".*kubepods.*", pod=~"flights-v1.*", name!~".*POD.*"}[1m]))
      queryStep: "1m" # Note: query step duration for range prometheus queries
      threshold: '0.16' # Value to start scaling for
    authenticationRef:
      name: keda-trigger-auth-predictkube-secret
---
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: hotels-v1-scaler
  namespace: travel-agency
spec:
  scaleTargetRef:
    name: hotels-v1
  pollingInterval: 15
  cooldownPeriod: 300
  minReplicaCount: 1
  maxReplicaCount: 10
  triggers:
  - type: predictkube
    metadata:
      predictHorizon: "1m"
      historyTimeWindow: "12h"  # We recomend to use minimum 7-14 days time window as historical data
      prometheusAddress: http://prometheus-service.monitoring.svc.cluster.local:9090
      query: sum(rate(container_cpu_usage_seconds_total{id=~".*kubepods.*", pod=~"hotels-v1.*", name!~".*POD.*"}[1m]))
      queryStep: "1m" # Note: query step duration for range prometheus queries
      threshold: '0.16' # Value to start scaling for
    authenticationRef:
      name: keda-trigger-auth-predictkube-secret
---
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: insurances-v1-scaler
  namespace: travel-agency
spec:
  scaleTargetRef:
    name: insurances-v1
  pollingInterval: 15
  cooldownPeriod: 300
  minReplicaCount: 1
  maxReplicaCount: 10
  triggers:
  - type: predictkube
    metadata:
      predictHorizon: "1m"
      historyTimeWindow: "12h"  # We recomend to use minimum 7-14 days time window as historical data
      prometheusAddress: http://prometheus-service.monitoring.svc.cluster.local:9090
      query: sum(rate(container_cpu_usage_seconds_total{id=~".*kubepods.*", pod=~"insurances-v1.*", name!~".*POD.*"}[1m]))
      queryStep: "1m" # Note: query step duration for range prometheus queries
      threshold: '0.16' # Value to start scaling for
    authenticationRef:
      name: keda-trigger-auth-predictkube-secret
---
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: travels-v1-scaler
  namespace: travel-agency
spec:
  scaleTargetRef:
    name: travels-v1
  pollingInterval: 15
  cooldownPeriod: 300
  minReplicaCount: 1
  maxReplicaCount: 10
  triggers:
  - type: predictkube
    metadata:
      predictHorizon: "1m"
      historyTimeWindow: "12h"  # We recomend to use minimum 7-14 days time window as historical data
      prometheusAddress: http://prometheus-service.monitoring.svc.cluster.local:9090
      query: sum(rate(container_cpu_usage_seconds_total{id=~".*kubepods.*", pod=~"travels-v1.*", name!~".*POD.*"}[1m]))
      queryStep: "1m" # Note: query step duration for range prometheus queries
      threshold: '0.16' # Value to start scaling for
    authenticationRef:
      name: keda-trigger-auth-predictkube-secret
